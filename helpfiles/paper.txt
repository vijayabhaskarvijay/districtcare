Certainly! Here are some common generalized categories that are often used in conferences:

1. **Technology and Innovation:**
   - Emerging Technologies
   - Artificial Intelligence and Machine Learning
   - Internet of Things (IoT)
   - Blockchain
   - Cybersecurity
   - Data Science and Analytics
   - Virtual Reality (VR) and Augmented Reality (AR)

2. **Engineering and Technology:**
   - Civil Engineering
   - Electrical and Electronics Engineering
   - Mechanical Engineering
   - Chemical Engineering
   - Computer Science and Engineering

3. **Environmental and Sustainability:**
   - Environmental Science
   - Sustainable Development
   - Renewable Energy
   - Climate Change and Adaptation
   - Green Technologies

4. **Health and Medicine:**
   - Healthcare Technologies
   - Medical Sciences
   - Biotechnology
   - Public Health
   - Healthcare Policy and Management

5. **Social Sciences and Humanities:**
   - Sociology
   - Psychology
   - Education
   - Anthropology
   - Economics

6. **Business and Economics:**
   - Business Management
   - Finance and Accounting
   - Marketing
   - Entrepreneurship
   - International Business

7. **Urban Planning and Development:**
   - Smart Cities
   - Urban Design and Architecture
   - Transportation and Infrastructure
   - Housing and Urban Development
   - Regional Planning

8. **Education and Learning:**
   - Education Technology (EdTech)
   - Curriculum Design and Development
   - Educational Psychology
   - Lifelong Learning

9. **Arts and Humanities:**
   - Fine Arts
   - Literature
   - History
   - Philosophy

10. **Law and Legal Studies:**
    - International Law
    - Human Rights
    - Criminal Justice
    - Intellectual Property

Remember, these are general categories and many conferences might have specific subcategories or niche areas of focus within these broader topics. It's always a good idea to carefully review the conference details and submission guidelines to ensure your project aligns with the specific themes and goals of the event.


<?php
session_start();
$servername = "localhost";
$dbUsername = "root";
$dbPassword = "";
$dbname = "urbanlink";
try {
    $conn = new PDO("mysql:host=$servername;dbname=$dbname", $dbUsername, $dbPassword);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "Connection failed: " . $e->getMessage();
    die();
}

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $email = $_POST['email'];
    $resetToken = bin2hex(random_bytes(16));
    $location = $_POST['location'];
    $_SESSION['reset_location'] = $location;
    $_SESSION['reset_email'] = $email; // Save the email in session for use in send_email.php
    include_once('send_email.php'); // Include the send_email.php file
    try {
        $stmt = $conn->prepare("INSERT INTO password_resets (email, token) VALUES (:email, :token)");
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':token', $resetToken);
        $stmt->execute();
        $subject = "Password Reset";
        $message = "Click the following link to reset your password: 
                <a href='http://example.com/public_reset_pwd.php?token=$resetToken'>Reset Password</a>";
        $headers = "From: sriramvenkat066@gmail.com\r\n";
        $headers .= "Content-Type: text/html; charset=UTF-8\r\n";
        mail($email, $subject, $message, $headers);
        $successMessage = "An email with instructions to reset your password has been sent.";
    } catch (PDOException $e) {
        echo "Error: " . $e->getMessage();
    }
}

?>

<!-- HTML Form for Password Reset -->
<!DOCTYPE html>
<html>

<head>
    <title>Password Reset</title>
</head>

<body>
    <?php if (isset($successMessage)) echo "<p>$successMessage</p>"; ?>
    <form method="post" action="">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <input type="submit" value="Reset Password">
        <div class="form-group">
            <label for="location">Location</label>
            <select id="location" name="location" required>
                <option value="gobi">Gobichettipalayam</option>
                <option value="sathy">Sathyamangalam</option>
            </select>
        </div>
    </form>
</body>

</html>
--------------------------------------------------------------------------------------------------------------------------------------------------------------
<?php
session_start();

// Verify if the token is valid
if (isset($_GET['token'])) {
    $resetToken = $_GET['token'];

    // Check the 'password_resets' table for a matching token
    $servername = "localhost";
    $dbUsername = "root";
    $dbPassword = "";
    $dbname = "urbanlink";

    try {
        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $dbUsername, $dbPassword);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        
        // Check if the reset token exists in the database
        $location = $_SESSION['reset_location'];
        $stmt = $conn->prepare("SELECT * FROM password_resets WHERE token = :token");
        $stmt->bindParam(':token', $resetToken);
        $stmt->execute();

        // If a matching token is found, allow the user to reset their password
        if ($stmt->rowCount() > 0) {
            if ($_SERVER['REQUEST_METHOD'] === 'POST') {
                // Get the new password from the form
                $newPassword = $_POST['password'];

                try {
                    // Get the location from the session variable
                    $location = $_SESSION['reset_location'];

                    // Set table and column names based on the location
                    $emailColumn = ($location === 'gobi') ? 'gobi_user_email' : 'sathy_user_email';
                    $passwordColumn = ($location === 'gobi') ? 'gobi_user_password' : 'sathy_user_password';
                    $table = ($location === 'gobi') ? 'gobi_users' : 'sathy_users';

                    // Prepare and execute the query to update the password
                    $stmt = $conn->prepare("UPDATE $table SET $passwordColumn = :newPassword WHERE $emailColumn = :email");
                    $stmt->bindParam(':newPassword', $newPassword);
                    $stmt->bindParam(':email', $email); // You'll need to get the username somehow

                    $stmt->execute();

                    $successMessage = "Password has been reset successfully.";
                } catch (PDOException $e) {
                    // Handle database connection or query errors
                    $errorMessage = "Database error: " . $e->getMessage();
                }
            }
        } else {
            // Handle case where the token is invalid
            $errorMessage = "Invalid reset token.";
        }
    } catch (PDOException $e) {
        // Handle database connection or query errors
        $errorMessage = "Database error: " . $e->getMessage();
    }
} else {
    // Handle case where no token is provided
    $errorMessage = "Token not provided.";
}
?>
<!-- HTML Form for Password Reset -->
<!DOCTYPE html>
<html>

<head>
    <title>Reset Password</title>
</head>

<body>
    <?php if (isset($errorMessage)) : ?>
        <div class="error"><?php echo $errorMessage; ?></div>
    <?php endif; ?>

    <?php if (isset($successMessage)) : ?>
        <div class="success"><?php echo $successMessage; ?></div>
    <?php else : ?>
        <form method="post" action="">
            <label for="password">New Password:</label>
            <input type="password" id="password" name="password" required>
            <input type="submit" value="Reset Password">
        </form>
    <?php endif; ?>
</body>

</html>

public_reset_pwd.php above